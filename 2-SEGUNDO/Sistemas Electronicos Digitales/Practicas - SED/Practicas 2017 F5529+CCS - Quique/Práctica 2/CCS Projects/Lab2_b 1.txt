#include <msp430.h> 

/*
 * main.c
 */
void setup(){//Activamos los pines de los leds
    P6DIR |= 0x60; //Activamos los pines 6.5 y 6.6
    P3DIR |= 0x1f; //Activamos los pines 3.0, 3.1, 3.2, 3.3, 3.4.
    P1DIR |= 0x40; //Activamos el pin 1.6.
    P2DIR &= ~0x02; //Activamos el pin 2.1 como input.
    P2REN |= 0x02; //Seleccionamos la resistencia pull-up.
    P2OUT |= 0x02; //Activamos la resistencia.
}
void retardo(){ //Retardo de 0,5s.
    volatile unsigned int i;
    for (i=500;i>0;i--){
        _delay_cycles(1000);
    }
}
void apagar(){ //Funcion que4 se encarga de apagar todos los leds.
    P6OUT &= ~0x20;
    P3OUT &= ~0x10;
    P3OUT &= ~0x08;
    P1OUT &= ~0x40;
    P6OUT &= ~0x40;
    P3OUT &= ~0x04;
    P3OUT &= ~0x02;
    P3OUT &= ~0x01;
}
void setLED(unsigned char leds){//Cadena de ifs que compara la mascara que se le envia para encender los leds correspondientes
    if((leds & 0x80)!=0){
        P3OUT |= 0x01;
    }
    if((leds & 0x40)!=0){
        P3OUT |= 0x02;
    }
    if((leds & 0x20)!=0){
        P3OUT |= 0x04;
    }
    if((leds & 0x10)!=0){
        P6OUT |= 0x40;
    }
    if((leds & 0x08)!=0){
        P1OUT |= 0x40;
    }
    if((leds & 0x04)!=0){
        P3OUT |= 0x08;
    }
    if((leds & 0x02)!=0){
        P3OUT |= 0x10;
    }
    if((leds & 0x01)!=0){
        P6OUT |= 0x20;
    }
}
void parpadeo(){ //Activa la secuencia de parpadeo
    volatile unsigned i; //Declaramos la variable del bucle
    apagar(); //Apagamos y esperamos los led 0.5s para quese aprecie el inicio del parpadeo
    retardo();
    for(i=0;i<10;i++){ //Bucle que hace parpadear los leds 10 veces.
        setLED(0xff);
        retardo();
        apagar();
        retardo();
    }
}
void Principal(){
    unsigned char secP[8]={0x80,0xC0,0xE0,0xF0,0xF8,0xFC,0xFE,0xFF}; //Declaramos los vectores con las secuencias de encendido de leds.
    unsigned char secS[8]={0x01,0x03,0x07,0x0F,0x1F,0x3F,0x7F,0xFF};
    unsigned char suma;                                               //Declaramos la variable que va a contener la suma de las mascaras de leds encendidos
    volatile unsigned int i, j , cond;
    apagar(); //Inicialmente apagamos todos los leds por si habia alguno encendido de alguna secuencia anterior
    while(1){ //Bucle infinito
        for(i=0;i<8;i++){
            setLED(secP[i]); //Vamos encendiendo leds segun la secuencia principal
            retardo();
            if((P2IN & 0x02)==0){//Miramos si esta pulsado el boton S1
                j=cond=0;
                while(j<8 && cond==0){ //Encendemos leds segun la secuencia secundaria hasta que esten todos encendidos
                    suma= secP[i] | secS[j]; //Hacemos esta suma para saber la mascara de leds encendidos segun los que ya habian y los que se añaden en esta iteracion
                    setLED(suma);
                    retardo();
                    if(suma == 0xff){ //Comprobamos si estan todos encendidos y si lo estan iniciamos la secuencia de parpadeo
                        parpadeo();
                        cond=1;
                    }
                    j++;
                }
                setLED(secP[i]); //Retornamos a los leds que habian encendidos antes de pulsar el boton.
                retardo();
            }
        }
        apagar();
        retardo();
    }
}
int main(void) {
    WDTCTL = WDTPW | WDTHOLD;	// Stop watchdog timer
    setup(); //Inicializamos pines.
	Principal(); //Iniciamos la secuencia principal.
	return 0;
}
